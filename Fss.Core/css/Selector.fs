namespace Fss

[<AutoOpen>]
module Selector =
    type Selector =
        static member Tag tag = Fss.Types.Selector.Tag tag
        static member Id id = Fss.Types.Selector.Id id
        static member Class class' = Fss.Types.Selector.Class class'
        static member Active = Fss.Types.Selector.Pseudo "active"
        static member AnyLink = Fss.Types.Selector.Pseudo "any-link"
        static member Blank = Fss.Types.Selector.Pseudo "blank"
        static member Checked = Fss.Types.Selector.Pseudo "checked"
        static member Current = Fss.Types.Selector.Pseudo "current"
        static member Disabled = Fss.Types.Selector.Pseudo "disabled"
        static member Empty = Fss.Types.Selector.Pseudo "empty"
        static member Enabled = Fss.Types.Selector.Pseudo "enabled"
        static member FirstOfType = Fss.Types.Selector.Pseudo "first-of-type"
        static member Focus = Fss.Types.Selector.Pseudo "focus"
        static member FocusVisible = Fss.Types.Selector.Pseudo "focus-visible"
        static member FocusWithin = Fss.Types.Selector.Pseudo "focus-within"
        static member Hover = Fss.Types.Selector.Pseudo "hover"
        static member Future = Fss.Types.Selector.Pseudo "future"
        static member indeterminate = Fss.Types.Selector.Pseudo "indeterminate"
        static member invalid = Fss.Types.Selector.Pseudo "invalid"
        static member inRange = Fss.Types.Selector.Pseudo "in-range"
        static member Lang language = Fss.Types.Selector.Pseudo $"lang({language})"
        static member LastChild = Fss.Types.Selector.Pseudo "last-child"
        static member LastOfType = Fss.Types.Selector.Pseudo "last-of-type"
        static member LocalLink = Fss.Types.Selector.Pseudo "local-link"
        static member Link = Fss.Types.Selector.Pseudo "link"
        static member NthChild child  = Fss.Types.Selector.Pseudo $"nth-child({child})"
        static member NthLastChild child  = Fss.Types.Selector.Pseudo $"nth-last-child({child})"
        static member NthOfType type' = Fss.Types.Selector.Pseudo $"nth-of-type({type'})"
        static member NthLastOfType type' = Fss.Types.Selector.Pseudo $"nth-last-of-type({type'})"
        static member onlyChild = Fss.Types.Selector.Pseudo "only-child"
        static member onlyOfType = Fss.Types.Selector.Pseudo "only-of-type"
        static member optional = Fss.Types.Selector.Pseudo "optional"
        static member outOfRange = Fss.Types.Selector.Pseudo "out-of-range"
        static member past = Fss.Types.Selector.Pseudo "past"
        static member playing = Fss.Types.Selector.Pseudo "playing"
        static member paused = Fss.Types.Selector.Pseudo "paused"
        static member placeholderShown = Fss.Types.Selector.Pseudo "placeholder-shown"
        static member readOnly = Fss.Types.Selector.Pseudo "read-only"
        static member readWrite = Fss.Types.Selector.Pseudo "read-write"
        static member required = Fss.Types.Selector.Pseudo "required"
        static member root = Fss.Types.Selector.Pseudo "root"
        static member scope = Fss.Types.Selector.Pseudo "scope"
        static member target = Fss.Types.Selector.Pseudo "target"
        static member targetWithin = Fss.Types.Selector.Pseudo "target-within"
        static member valid = Fss.Types.Selector.Pseudo "valid"
        static member visited = Fss.Types.Selector.Pseudo "visited"
        static member firstChild = Fss.Types.Selector.Pseudo "first-child"
        static member userInvalid = Fss.Types.Selector.Pseudo "user-invalid"